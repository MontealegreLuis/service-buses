plugins {
    id 'java-library'
    id 'java-test-fixtures'
    id 'jacoco'
    id 'maven-publish'
    id 'com.github.sherter.google-java-format' version '0.9'
    id 'info.solidsoft.pitest' version '1.7.0'
}

group 'com.montealegreluis'

apply from: rootProject.file('hooks.gradle')

repositories {
    mavenCentral()
    maven {
        url = uri("https://maven.pkg.github.com/montealegreluis/assert")
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
            password = project.findProperty("gpr.token") ?: System.getenv("TOKEN")
        }
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/montealegreluis/service-buses")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

dependencies {
    implementation "com.montealegreluis:assert:${assertVersion}"
    implementation 'org.reflections:reflections:0.10.2'

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${jUnitVersion}"
    testImplementation testFixtures("com.montealegreluis:activity-feed:${activityFeedVersion}")
    testFixturesImplementation "org.junit.jupiter:junit-jupiter-api:${jUnitVersion}"
    testFixturesImplementation 'com.github.javafaker:javafaker:1.0.2'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${jUnitVersion}"
}

test {
    useJUnitPlatform()
    finalizedBy("jacocoTestReport")
}

jacocoTestReport {
    dependsOn test
    reports {
        html.destination file("${buildDir}/coverage")
    }
}

pitest {
    threads = 4
    outputFormats = ['HTML']
    timestampedReports = false
    junit5PluginVersion = '0.15'
    coverageThreshold = 98
    mutationThreshold = 98
}
